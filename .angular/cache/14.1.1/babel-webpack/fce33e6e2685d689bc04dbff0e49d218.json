{"ast":null,"code":"import { CoordinateConverter, Geodetic } from './coord/coordinate-converter';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/input\"; // var WorldWind: any;\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor() {\n      this.utm = '';\n      this.shoes = ['Boots', 'Flops', 'Tennis'];\n    }\n\n    ngAfterViewInit() {\n      // Create the WorldWindow.\n      var wwd = new WorldWind.WorldWindow(\"canvasOne\"); // Create and add layers to the WorldWindow.\n\n      var layers = [// Imagery layers.\n      {\n        layer: new WorldWind.BMNGLayer(),\n        enabled: true\n      }, {\n        layer: new WorldWind.BMNGLandsatLayer(),\n        enabled: false\n      }, {\n        layer: new WorldWind.BingAerialLayer(null),\n        enabled: false\n      }, {\n        layer: new WorldWind.BingAerialWithLabelsLayer(null),\n        enabled: true\n      }, {\n        layer: new WorldWind.BingRoadsLayer(null),\n        enabled: false\n      }, {\n        layer: new WorldWind.OpenStreetMapImageLayer(null),\n        enabled: false\n      }, // Add atmosphere layer on top of all base layers.\n      {\n        layer: new WorldWind.AtmosphereLayer(),\n        enabled: true\n      }, // WorldWindow UI layers.\n      {\n        layer: new WorldWind.CompassLayer(),\n        enabled: true\n      }, {\n        layer: new WorldWind.CoordinatesDisplayLayer(wwd),\n        enabled: true\n      }, {\n        layer: new WorldWind.ViewControlsLayer(wwd),\n        enabled: true\n      }];\n\n      for (var l = 0; l < layers.length; l++) {\n        layers[l].layer.enabled = layers[l].enabled;\n        wwd.addLayer(layers[l].layer);\n      }\n\n      wwd.addEventListener(\"mousedown\", me => {\n        let obj = wwd.pickTerrain(wwd.canvasCoordinates(me.clientX, me.clientY)).terrainObject();\n\n        if (obj) {\n          let pos = new WorldWind.Position(obj.position.latitude, obj.position.longitude, obj.position.altitude);\n          console.info(pos);\n          const latLo = new Geodetic();\n          latLo.latitude = obj.position.latitude;\n          latLo.longitude = obj.position.longitude;\n          this.utm = CoordinateConverter.toUTM(latLo).toString();\n        } else {\n          console.warn('Unable to get position from terrain.');\n        }\n      }); // Create a layer manager for controlling layer visibility.\n      // var layerManager = new LayerManager(wwd);\n    }\n\n    listSelectionChanged(evt) {\n      console.info(this.model);\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 8,\n    vars: 1,\n    consts: [[1, \"controls\"], [\"appearance\", \"standard\"], [\"readonly\", \"\", \"matInput\", \"\", \"placeholder\", \"UTM Coordinate\", \"size\", \"100\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"canvasOne\", \"width\", \"1000\", \"height\", \"1000\", 2, \"width\", \"75%\", \"height\", \"75%\", \"background-color\", \"black\"], [1, \"coord-list\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-form-field\", 1)(2, \"mat-label\");\n        i0.ɵɵtext(3, \"UTM\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.utm = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"canvas\", 3);\n        i0.ɵɵtext(6, \" Your browser does not support HTML5 Canvas.\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"div\", 4);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.utm);\n      }\n    },\n    dependencies: [i1.MatFormField, i1.MatLabel, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.MatInput],\n    styles: [\".controls[_ngcontent-%COMP%]{top:10px;padding-bottom:30px;padding-left:10px;padding-top:10px}#canvasOne[_ngcontent-%COMP%]{float:left}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}